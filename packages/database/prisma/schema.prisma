datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserRole {
  USER
  ADMIN
}

model UserProfile {
  userId    String   @id
  avatarUrl String?
  role      UserRole @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Team {
  id           String           @id @default(cuid())
  name         String
  slug         String           @unique
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
  memberships  TeamMembership[]
  Subscription Subscription?
}

enum TeamMembershipStatus {
  PENDING
  ACCEPTED
  REJECTED
}

model TeamMembership {
  id        String               @id @default(cuid())
  team      Team                 @relation(fields: [teamId], references: [id], onDelete: Cascade)
  teamId    String
  userId    String
  status    TeamMembershipStatus @default(PENDING)
  createdAt DateTime             @default(now())
  updatedAt DateTime             @updatedAt

  @@unique([teamId, userId])
}

model Subscription {
  id              String    @id @default(cuid())
  team            Team      @relation(fields: [teamId], references: [id])
  teamId          String    @unique
  customerId      String
  subscriptionId  String
  status          String
  planId          String
  variantId       String
  nextPaymentDate DateTime?
}
